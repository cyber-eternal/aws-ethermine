# Create ImageBuilder pipeline for building Ubuntu 22.04 + NVIDIA Driver
# It's far smaller than the DeepLearning AMI (10GB vs 150GB+) and supports the new G5 instances

---

AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CPUArch:
    Description: CPU Architecture
    Type: String
    Default: x86-64
    AllowedValues:
    - x86-64
    - arm64

Mappings:
  ArchSettings:
    x86-64:
      ParentImage: ami-09d56f8956ab235b3  # Ubuntu Server 22.04 LTS (HVM) [us-east-1 / x86-64]
      NvidiaDriver: https://us.download.nvidia.com/tesla/510.73.08/NVIDIA-Linux-x86_64-510.73.08.run
      InstanceType: g5.xlarge
    arm64:
      ParentImage: ami-02ddaf75821f25213  # Ubuntu Server 22.04 LTS (HVM) [us-east-1 / arm64]
      NvidiaDriver: https://us.download.nvidia.com/tesla/510.73.08/NVIDIA-Linux-aarch64-510.73.08.run
      InstanceType: g5g.xlarge

Resources:
  InstallCudaComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub "${AWS::StackName}-install-nvidia"
      Description: Install NVIDIA Driver
      Platform: Linux
      Version: 1.0.0
      Data:
        Fn::Sub:
        - |
          name: NvidiaInstallationUbuntu
          description: NVidia driver installation on Ubuntu
          schemaVersion: 1.0
          phases:
            - name: build
              steps:
                - name: CudaBuild
                  action: ExecuteBash
                  inputs:
                    commands:
                      - set -x
                      - set -e
                      - apt-get update
                      - apt-get -y install build-essential dkms pkg-config
                      - wget -nv ${NvidiaDriver}
                      - sh $(basename ${NvidiaDriver}) -s
                      - dkms add nvidia/$(cut -d/ -f5 <<< ${NvidiaDriver})
                      - apt-get clean
            - name: validate
              steps:
                - name: CudaValidate
                  action: ExecuteBash
                  inputs:
                    commands:
                      - which nvidia-smi
                      - nvidia-smi
            - name: test
              steps:
                - name: CudaTest
                  action: ExecuteBash
                  inputs:
                    commands:
                      - lsmod | grep ^nvidia
                      - which nvidia-smi
                      - nvidia-smi
        - NvidiaDriver: !FindInMap [ ArchSettings, !Ref CPUArch, NvidiaDriver ]

  CleanupComponent:
    Type: AWS::ImageBuilder::Component
    Properties:
      Name: !Sub "${AWS::StackName}-cleanup"
      Description: Cleanup SSM
      Platform: Linux
      Version: 1.0.0
      Data: |
        name: CleanupSSM
        description: Cleanup SSM logs
        schemaVersion: 1.0
        phases:
          - name: build
            steps:
              - name: CleanupBuild
                action: ExecuteBash
                inputs:
                  commands:
                    - rm -rfv /var/log/amazon/ssm/*.log /var/lib/amazon/ssm/i-*/session/orchestration/*
                    - rm -rfv /var/log/cloud-init* /var/lib/cloud/instances/i-* /var/lib/cloud/instance

  Infrastructure:
    Type: AWS::ImageBuilder::InfrastructureConfiguration
    Properties:
      Name: !Ref AWS::StackName
      InstanceProfileName: EC2InstanceProfileForImageBuilder
      InstanceTypes:
      - !FindInMap [ ArchSettings, !Ref CPUArch, InstanceType ]

  ImageRecipe:
    Type: AWS::ImageBuilder::ImageRecipe
    Properties:
      Name: !Ref AWS::StackName
      ParentImage: !FindInMap [ ArchSettings, !Ref CPUArch, ParentImage ]
      Components:
      #- ComponentArn: !Sub "arn:aws:imagebuilder:${AWS::Region}:aws:component/update-linux/1.0.2/1"
      - ComponentArn: !Ref InstallCudaComponent
      #- ComponentArn: !Sub "arn:aws:imagebuilder:${AWS::Region}:aws:component/aws-cli-version-2-linux/1.0.3/1"
      - ComponentArn: !Ref CleanupComponent
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          VolumeSize: 10
          VolumeType: gp3
      Version: 1.0.1
      WorkingDirectory: /tmp

  DistributionConfig:
    Type: AWS::ImageBuilder::DistributionConfiguration
    Properties:
      Name: !Ref AWS::StackName
      Distributions:
      # All regions where G4DN instances are available
      - Region: af-south-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-east-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-northeast-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-northeast-2
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-northeast-3
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-south-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-southeast-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ap-southeast-2
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: ca-central-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-central-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-north-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-south-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-west-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-west-2
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: eu-west-3
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: me-south-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: sa-east-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: us-east-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: us-east-2
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: us-west-1
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all
      - Region: us-west-2
        AmiDistributionConfiguration:
          Name: !Sub "${AWS::StackName} {{imagebuilder:buildDate}}"
          LaunchPermissionConfiguration:
            UserGroups:
              - all

  ## 'Image' resource immediately starts building the AMI
  #Image:
  #  Type: AWS::ImageBuilder::Image
  #  Properties:
  #    Name: !Ref AWS::StackName
  #    InfrastructureConfigurationArn: !Ref Infrastructure
  #    DistributionConfigurationArn: !Ref DistributionConfig
  #    EnhancedImageMetadataEnabled: true
  #    ImageRecipeArn: !Ref ImageRecipe

  ImagePipeline:
    Type: AWS::ImageBuilder::ImagePipeline
    Properties:
      Name: !Ref AWS::StackName
      InfrastructureConfigurationArn: !Ref Infrastructure
      DistributionConfigurationArn: !Ref DistributionConfig
      EnhancedImageMetadataEnabled: true
      ImageRecipeArn: !Ref ImageRecipe

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/imagebuilder/${AWS::StackName}"
